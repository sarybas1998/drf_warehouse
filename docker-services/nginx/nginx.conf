worker_processes auto;

events {
    worker_connections 1024;
}

http {
    server_tokens off;
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Basic settings for performance and efficiency
    sendfile on;                            # Enables efficient file transfers
    tcp_nopush on;                          # Reduces network congestion
    tcp_nodelay on;                         # Sends data to the client immediately
    keepalive_timeout 65;                   # Time to keep connections open
    types_hash_max_size 2048;               # Max size for MIME types hash table

    # Include MIME types (used to identify file types)
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Gzip settings for compressing responses (improves performance)
    gzip on;
    gzip_disable "msie6";             # Disable gzip for old IE versions
    gzip_vary on;                     # Enables 'Vary: Accept-Encoding' header
    gzip_proxied any;                 # Compress responses for all proxied requests
    gzip_comp_level 6;                # Compression level (1-9); 6 is a good balance
    gzip_buffers 16 8k;               # Buffer for compressed responses
    gzip_http_version 1.1;            # Compress only for HTTP/1.1 or newer
    gzip_types text/plain text/css application/json application/javascript text/javascript;

    # SSL configurations (for HTTPS)
    ssl_protocols TLSv1.2 TLSv1.3;                  # Only allow secure TLS versions
    ssl_prefer_server_ciphers on;                   # Enforce server-preferred ciphers for better security
    ssl_ciphers HIGH:!aNULL:!MD5;                   # Secure cipher suite

    # Security headers to enhance client security
    add_header X-Content-Type-Options nosniff;                  # Prevent MIME-type sniffing
    add_header X-Frame-Options DENY;                            # Prevent clickjacking by disallowing iframes
    add_header X-XSS-Protection "1; mode=block";                # Enable XSS filter in browsers
    add_header Content-Security-Policy "default-src 'self'";    # Restrict sources to self to prevent code injection


    server {
        listen 80;
        server_name 172.22.0.7;
        client_max_body_size 25M;

        # Redirect all HTTP requests to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name 172.22.0.7;
        client_max_body_size 25M;

        # Specify paths to the SSL certificate and private key
        ssl_certificate /etc/ssl/private/nginx-selfsigned.crt;
        ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

        # HTTP Strict Transport Security (HSTS) to enforce HTTPS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Rate limiting settings (protect against DoS attacks)
        # limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;  # Define rate limit zone
        # limit_req_status 429;       # Response code for exceeding rate limit

        location / {
            proxy_pass http://172.22.0.6:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Apply rate limiting to this location
            # limit_req zone=api burst=20 nodelay;            # Allow short bursts of requests before limiting
        }

        location /storage/ {
            proxy_pass http://172.22.0.5:9000/storage/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_intercept_errors on;
            error_page 403 =404 /custom_404;
            error_page 404 =404 /custom_404;

            # Apply rate limiting to this location
            # limit_req zone=api burst=20 nodelay;            # Allow short bursts of requests before limiting
        }

        location = /custom_404 {
            return 404;
        }

        location  = /storage/ {
            return 404;
        }

        location ~ /\. {
            deny all;       # Deny access to files starting with a dot (.)
        }
    }
}


